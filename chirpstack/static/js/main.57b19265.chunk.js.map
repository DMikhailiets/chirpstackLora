{"version":3,"sources":["pages/login/components/login.module.scss","core/ErrorBoundary/index.module.scss","pages/organizations/components/organization.module.scss","pages/devices/components/devices.module.scss","pages/serviceProfiles/components/serviceProfile.module.scss","pages/applications/components/applications.module.scss","pages/deviceProfiles/components/deviceProfile.module.scss","components/Block/index.tsx","redux/selectors/organizationsSelector.ts","core/axios.tsx","components/Notification/index.js","API/organizationsAPI.ts","redux/reducers/organizationsReducer.tsx","modules/createOrganizationForm/components/createOrganizationForm.tsx","modules/createOrganizationForm/containers/index.tsx","modules/createUserForm/components/createUserForm.tsx","modules/createUserForm/containers/index.tsx","modules/createServiceProfileForm/createServiceProfileForm.tsx","modules/createApplcationForm/createApplicationForm.tsx","modules/createDeviceProfileForm/createDeviceProfile.tsx","modules/createDeviceForm/createDeviceForm.tsx","components/Organization/components/Organization.tsx","components/Organization/containers/organization.ts","components/NumericInput/NumericInput.js","pages/login/components/index.tsx","API/authAPI.ts","redux/reducers/loginReducer.ts","pages/login/index.ts","pages/login/containers/index.tsx","core/ErrorBoundary/index.js","pages/home/components/index.tsx","pages/home/index.ts","pages/home/containers/index.ts","pages/organizations/components/organization.tsx","redux/selectors/devicesSelector.ts","redux/selectors/serviceProfileSelector.ts","redux/selectors/applicationsSelector.ts","redux/selectors/deviceProfilesSelector.ts","pages/organizations/index.ts","pages/organizations/containers/index.tsx","pages/devices/components/devicesPage.tsx","API/applicationsAPI.ts","redux/reducers/applicationsReducer.ts","API/devicesAPI.ts","redux/reducers/devicesReducer.ts","API/deviceProfilesAPI.ts","redux/reducers/deviceProfileReducer.ts","pages/devices/index.ts","pages/devices/containers/devicesPageContainer.tsx","API/serviceProfilesAPI.ts","redux/reducers/serviceProfilesReducer.ts","pages/serviceProfiles/components/serviceProfileComponent.tsx","pages/serviceProfiles/index.ts","pages/serviceProfiles/containers/serviceProfile.tsx","pages/applications/components/applicationsComponent.tsx","pages/applications/index.ts","pages/applications/containers/applications.tsx","pages/deviceProfiles/components/deviceProfileComponent.tsx","pages/deviceProfiles/index.ts","pages/deviceProfiles/containers/deviceProfile.tsx","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["module","exports","Block","props","className","classNames","children","fetchOrganizations","createSelector","state","organizationsReducer","organizations","fetchOrganizationsUsers","organizationsUsers","users","axios","defaults","baseURL","headers","localStorage","token","text","type","title","duration","notification","message","description","organizationsAPI","createOrganization","organizationData","a","post","response","Notification","Error","data","error","request","getOrganizations","get","then","res","catch","getOrganizationsUsers","id","console","log","createUser","initialstate","dispatch","Promise","reslove","reject","err","action","result","CreateOrganizationForm","Select","Option","visible","setNewOrganizationFlag","Form","useForm","form","useState","disabled","onCancel","footer","name","onFinish","values","resetFields","onFinishFailed","errorInfo","Item","label","rules","required","htmlType","connect","components","handleChange","value","CreateUserForm","setNewUserFormVisible","forEach","organization","push","key","displayName","mode","style","width","placeholder","onChange","defaultValue","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","OptGroup","CreateServiceProfileForm","getServiceProfiles","networkServers","createServiceProfile","setNewServiceProfileFlag","networkServersOnSelect","networkServer","server","organizationsOnSelect","defaultChecked","CreateApplicationForm","serviceProfiles","createApplication","setNewApplicationFlag","serviceProfilesOnSelect","serviceProfile","CreateDeviceProfileForm","createDeviceProfile","setNewDeviceProfile","getFieldValue","validator","rule","test","resolve","maxLength","CreateDeviceForm","applications","createDevice","deviceProfiles","setNewDeviceFlag","applicationsOnSelect","application","deviceProfilesOnSelect","devicaProfile","minLength","Organization","newUserVisible","useEffect","marginLeft","marginTop","marginRight","extra","PlusCircleTwoTone","onClick","loading","undefined","display","flexWrap","flexDirection","length","image","Empty","PRESENTED_IMAGE_SIMPLE","map","user","email","setOrganizationsUsers","React","memo","NumericInput","e","target","isNaN","onBlur","valueTemp","charAt","slice","replace","this","list","split","prefix","num","formatNumber","Component","LoginForm","setButtonType","to","content_wrapper","minHeight","span","login_form_wrapper","block","initialValues","remember","loginUser","window","location","reload","finally","authAPI","authUser","authData","userReducer","containers","username","password","setItem","jwt","LoginComponents","ErrorBoundary","hasError","errorStatus","wrapper","status","subTitle","Sider","Layout","Home","collapsed","setEditMode","collapsedWidth","onCollapse","onMouseEnter","onMouseLeave","theme","defaultSelectedKeys","AppstoreOutlined","SnippetsOutlined","FontColorsOutlined","ProfileOutlined","ClusterOutlined","logout","LogoutOutlined","path","render","removeItem","HomeComponent","OrganizationsPage","newOrganizationFlag","errorMessage","backgroundSize","height","justifyContent","flexGrow","createdAt","fetchDevices","devicesReducer","devices","fetchNetworkServers","serviceProfileReducer","fetchServiceProfiles","fetchApplications","applicationsReducer","fetchDeviceProfiles","deviceProfilesReducer","Organizations","canHaveGateways","userData","org","devicesPage","getApplications","getDevices","getDeviceProfiles","newDeviceFlag","Fragment","device","alignItems","devEUI","applicationID","deviceProfileName","deviceStatusBattery","deviceStatusMargin","deviceStatusExternalPowerSource","deviceStatusBatteryLevelUnavailable","deviceStatusBatteryLevel","lastSeenAt","applicationsAPI","initialState","setApplictions","devicesAPI","setDevices","deviceProfilesAPI","createDeviceProfiles","deviceProfile","setDeviceProfiles","deviceProfileID","referenceAltitude","serviceProfilesAPI","getNetworkServers","createServiceProfiles","ServiceProfile","setServiceProfiles","networkServersReducer","newServiceProfileFlag","networkServerID","organizationID","ServiceProfilePage","addGWMetaData","nwkGeoLoc","ServiceProfiles","newApplicationFlag","serviceProfileName","Applications","serviceProfileID","newDeviceProfile","DeviceProfiles","macVersion","regParamsRevision","supportsJoin","rxFreq2","payloadCodec","App","exact","Boolean","hostname","match","rootReducer","combineReducers","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57b19265.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"login_content_wrapper__3tRH4\",\"login_form_wrapper\":\"login_login_form_wrapper__2I6hy\",\"block\":\"login_block__oOkej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorBoundary_wrapper__WcCOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"organization_content_wrapper__3hHnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"devices_content_wrapper__2Z6L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"serviceProfile_content_wrapper__M9OMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"applications_content_wrapper__1hW1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"deviceProfile_content_wrapper__1wdRE\"};","\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./block.scss\";\n\nconst Block = (props: any) => (\n  <div className={classNames(\"block\", props.className)}>{props.children}</div>\n);\n\nexport default Block;","import { AppState } from './../store'\nimport { createSelector } from \"reselect\"\n\n\nconst getOrganizations = (state: AppState) => {\n    return state.organizationsReducer.organizations\n}\n\nconst getOrganizationsUsers = (state: AppState) => {\n    return state.organizationsReducer.organizationsUsers\n}\n\nexport const fetchOrganizations = createSelector(getOrganizations, (organizations: any) => {\n    return organizations \n})\n\nexport const fetchOrganizationsUsers = createSelector(getOrganizationsUsers, (users: any) => {\n    return users \n})\n\n\n","import axios from \"axios\"\nimport dotenv from \"dotenv\";\n\naxios.defaults.baseURL = 'http://127.0.0.1:5555/'\naxios.defaults.headers = {\n    'token': localStorage.token \n}\n\n\nexport default axios","import React from 'react'\nimport { notification } from \"antd\"\n\nexport default ({ text = '', type = \"info\", title = '', duration = 3 }) =>\n  notification[type]({\n    message: title,\n    description: text,\n    duration: duration,\n    //icon: <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n});","\nimport { default as axios } from '../core/axios';\nimport Notification from '../components/Notification';\n\n\n\nexport const organizationsAPI = {\n    createOrganization:  async (organizationData: any) => {\n        try {\n            let response = await axios.post('/api/chirpOrganization', organizationData)\n            Notification({\n                text: 'Application was created!',\n                type: 'success',\n                title: \"Success!\"\n              })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    getOrganizations: () => {\n        let response = axios.get('/api/chirpOrganization')\n            .then((res: any) => res)\n            .catch((error: any) => {\n                throw new Error(),\n                Notification({\n                    text: error.response.data.error,\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n                })\n        return response\n    },\n    getOrganizationsUsers: (id:any) => {\n        console.log(id)\n        let response = axios.get(`api/listUsersOrg/${id}`)\n            .then((res: any) => res)\n            .catch((error: Error) => {throw new Error()})\n        return response\n    },\n    createUser: (data:any) => {\n        let response = axios.post(`api/addUserToOrg`, data)\n            .then((res: any) => res)\n            .catch((error: Error) => {throw new Error()})\n        return response\n    }\n}\nexport default organizationsAPI","import { Redirect } from 'react-router-dom';\nimport { organizationsAPI } from '../../API/organizationsAPI';\nimport redux from 'redux'\nimport React from 'react';\nimport Notification from '../../components/Notification';\n\nconst initialstate = {\n    organizations: [],\n    organizationsUsers: []\n}\n\n\nconst organizationsReducer = (state: any = initialstate, action: any) => {\n    switch(action.type){\n        case 'SET_ORGANIZATIONS': {\n            return { \n                ...state, organizations: action.organizations.data.result,\n            }\n        }\n        case 'SET_ORGANIZATIONS_USERS': {\n                //let index = state.organizations.find((organization: any) => organization.id === action.id).id\n                //let index = state.organizations.findIndex((organization: any) => organization.id === action.id)\n                //console.log(index)\n            return {\n                ...state, organizationsUsers: { ...state.organizationsUsers , \n                     [action.id]: {\n                         users: action.users.data.result\n                     }\n                } \n            }\n        }\n        default: return state\n    }\n}\n\nconst setOrganizations = (organizations: any) => ({type: 'SET_ORGANIZATIONS', organizations})\nconst setOrganizationsUsers = (users: any, id: any) => ({type: 'SET_ORGANIZATIONS_USERS', users, id})\n\nexport const getOrganizations = () => (dispatch: redux.Dispatch) => {\n    return new Promise((reslove: any, reject: any) => {\n        organizationsAPI.getOrganizations()\n            .then((response: any) =>{\n                dispatch(setOrganizations(response))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    })\n}\n\nexport const getOrganizationsUsers = (id: any) => (dispatch: redux.Dispatch) => {\n    return new Promise((reslove: any, reject: any) => {\n        organizationsAPI.getOrganizationsUsers(id)\n            .then((response: any) =>{\n                dispatch(setOrganizationsUsers(response, id))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    })\n}\n\nexport const createUser = (userData: any) => (dispatch: redux.Dispatch) => {\n    return new Promise((reslove: any, reject: any) => {\n        let organizations: any = []\n        userData.Organizations.map((org: any) => organizations.push({\n            \"isAdmin\": true,\n            \"isDeviceAdmin\": true,\n            \"isGatewayAdmin\": true,\n            \"organizationID\": org\n        }))\n        organizationsAPI.createUser({\n                \"organizations\": organizations,\n                \"password\": userData.password,\n                \"user\": {\n                  \"email\": userData.email,\n                  \"isActive\": true,\n                  \"isAdmin\": true,\n                  \"note\": \"string\",\n                  \"sessionTTL\": 0\n                }\n        })\n            .then((response: any) =>{\n                getOrganizations()\n                Notification({\n                    text: \"User was created!)\",\n                    type: 'success',\n                    title: \"Success!\",\n                    duration: 5\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    })\n}\n\nexport const createOrganization = (data: any) => (dispatch: redux.Dispatch) => {\n    console.log(data)\n   \n    return new Promise((reslove: any, reject: any) => {\n        try {\n            let response = organizationsAPI.createOrganization(\n                {\n                    \"organization\": {\n                      \"canHaveGateways\": data.canHaveGateways,\n                      \"displayName\": data.displayName,\n                      \"name\": data.name\n                    }\n                  }\n                )\n            organizationsAPI.getOrganizations()\n            return response\n            }\n            catch(error){\n        \n            } \n    })\n}\n\n\nexport default organizationsReducer","import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport style from './form.module.scss'\nimport { Block } from '../../../components'\nimport notification from '../../../components/Notification'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary'\n\nconst { Option } = Select\n\ntype CreateOrganizationType = {\n  visible: boolean,\n  createOrganization: Function,\n  setNewOrganizationFlag: Function,\n  getOrganizations: Function\n}\n\n\nconst CreateOrganizationForm: React.FC<CreateOrganizationType> = ({getOrganizations, visible, createOrganization, setNewOrganizationFlag}) => { \n  const [form] = Form.useForm()  \n  const[disabled, setButtonType] = useState(false)\n    // const[canHaveGateways, setCanHaveGateways] = useState(false)\n    // const setCanHaveGateways = () => {\n\n    // }\n    const onFinish = (values: any) => {\n      createOrganization(values)\n      getOrganizations()\n      form.resetFields()\n      setNewOrganizationFlag(false)\n    }\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo)\n    }\n    \n return(\n   \n  <Modal\n    title=\"Create organization\"\n    visible={visible}\n    onCancel={() => setNewOrganizationFlag(false)}\n    footer={false}\n  > \n    <Form\n      form={form}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n    <Form.Item \n        name=\"canHaveGateways\" \n        label=\"canHaveGateways\" \n    >    \n    <Switch />\n    </Form.Item>\n      <Form.Item\n        label=\"displayName\"\n        name=\"displayName\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n      {/* <Form.Item\n        label=\"id\"\n        name=\"id\"\n        rules={[{ required: true, message: 'Number is required!' },\n        () => ({\n          validator(rule, value) {\n            console.log(typeof(parseInt(value)))\n            if (!value || parseInt(value) > 0 ) {\n              \n              return Promise.resolve();\n            }\n            return Promise.reject('Number required!')\n          },\n        })\n        ]}\n      >\n        <Input/>\n      </Form.Item> */}\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n      \n      <Form.Item \n      > \n      </Form.Item>\n      <Form.Item \n      >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n          Allow\n        </Button>\n      </Form.Item>\n    </Form>        \n</Modal>\n        \n )\n}\n\n\n\nexport default CreateOrganizationForm\n\n","import components from '../components/createOrganizationForm'\nimport { connect } from 'react-redux'\nimport createOrganization from '../../../redux/reducers/organizationsReducer'\n\nexport default connect(null, {})(components)","import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\n\nconst { Option } = Select\n\ntype CreateOrganizationType = {\n  visible: boolean,\n  createUser: Function,\n  setNewUserFormVisible: Function,\n  organizations: any,\n  getOrganizations: Function\n}\n\nfunction handleChange(value: any) {\n  console.log(`selected ${value}`);\n}\n\nconst CreateUserForm: React.FC<CreateOrganizationType> = ({getOrganizations, organizations = [], visible, createUser, setNewUserFormVisible}) => { \n  const [form] = Form.useForm()  \n  const[disabled, setButtonType] = useState(false)\n  const children: any = []\n  organizations.forEach((organization: any) => children.push(<Option value={organization.id}key={organization.id}>{organization.displayName}</Option>))\n  \n  const onFinish = (values: any) => {\n    createUser(values)\n    form.resetFields()\n    setNewUserFormVisible(false)\n  }\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }  \n\n  return(\n  <Modal\n    title=\"Create User\"\n    visible={visible}\n    onCancel={() => setNewUserFormVisible(false)}\n    footer={false}\n  > \n     <Form\n      form={form}\n      name=\"createUserForm\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n        <Form.Item \n          name=\"Organizations\" \n          label=\"Organizations\" \n          rules={[{ required: true, message: 'Please choise organization!' }]}\n        >      \n          <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"Please select\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {children}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"email\"\n          name=\"email\"\n          rules={[{ required: true, \n                    type: 'email',\n                    message: 'Incorrect email' \n                  }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n          <Input.Password  iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}/>\n        </Form.Item>\n        {/* <Form.Item \n          name=\"isActive\" \n          label=\"isActive\" \n          rules={[{required: true }]}\n        >    \n          <Switch/>\n        </Form.Item>\n        <Form.Item \n          name=\"isAdmin\" \n          label=\"isAdmin\" \n        >    \n          <Switch/>\n        </Form.Item> */}\n        <Form.Item>\n          <Button \n            type=\"primary\" \n            htmlType=\"submit\" \n            disabled={disabled}\n          >\n            Allow\n          </Button>\n        </Form.Item>\n    </Form>        \n</Modal>\n        \n )\n}\n\n\n\nexport default CreateUserForm\n\n","import components from '../components/createUserForm'\nimport { connect } from 'react-redux'\nimport createOrganization from '../../../redux/reducers/organizationsReducer'\n\nexport default connect(null, {})(components)","import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport style from 'createServiceProfileForm.module.scss'\nimport { Block } from '../../components'\nimport notification from '../../components/Notification'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary'\n\nconst { Option, OptGroup } = Select\n\nfunction handleChange(value: any) {\n    console.log(`selected ${value}`);\n  }\n\ntype CreateOrganizationType = {\n  createServiceProfile: Function\n  setNewServiceProfileFlag: Function\n  getServiceProfiles: Function\n  networkServers: []\n  organizations: []\n  visible: boolean\n}\n\n\nexport const CreateServiceProfileForm: React.FC<CreateOrganizationType> = ({ getServiceProfiles, organizations, visible, networkServers, createServiceProfile, setNewServiceProfileFlag}) => { \n    let networkServersOnSelect: any = []\n    networkServers.forEach((networkServer: any) => networkServersOnSelect.push(<Option value={networkServer.name}key={networkServer.id}>{networkServer.name+ ' '+ networkServer.server}</Option>))\n    const [form] = Form.useForm()  \n    const organizationsOnSelect: any = []\n    organizations.forEach((organization: any) => organizationsOnSelect.push(<Option value={organization.id}key={organization.id}>{organization.displayName}</Option>))\n    const[disabled, setButtonType] = useState(false)\n    \n    const onFinish = (values: any) => {\n      createServiceProfile(values).then(\n        getServiceProfiles()\n      )\n      form.resetFields()\n      setNewServiceProfileFlag(false)\n    }\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo)\n    }\n    \n return(\n   \n  <Modal\n    title=\"Create Service profile\"\n    visible={visible}\n    onCancel={() => setNewServiceProfileFlag(false)}\n    footer={false}\n  > \n    <Form\n      form={form}\n      name=\"serviceProfileForm\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n    <Form.Item \n        name=\"addGWMetaData\" \n        label=\"addGWMetaData\" \n    >    \n        <Switch defaultChecked={false}/>\n    </Form.Item>\n    <Form.Item \n        name=\"nwkGeoLoc\" \n        label=\"nwkGeoLoc\" \n    >    \n        <Switch defaultChecked={false}/>\n    </Form.Item>\n    <Form.Item\n      label=\"name\"\n      name=\"name\"\n      rules={[{ required: true, message: 'Please input name!' }]}\n    >\n      <Input />\n    </Form.Item>\n    <Form.Item \n          name=\"networkServerID\" \n          label=\"networkServerID\" \n          rules={[{ required: true, message: 'Please choise networkServerID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {networkServersOnSelect}\n          </Select>\n        </Form.Item>\n        <Form.Item \n          name=\"organizationID\" \n          label=\"organizationID\" \n          rules={[{ required: true, message: 'Please choise organizationID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {organizationsOnSelect}\n          </Select>\n        </Form.Item>\n      <Form.Item \n      >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n          Allow\n        </Button>\n      </Form.Item>\n    </Form>        \n</Modal>\n        \n )\n}\n\n\n","import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport style from './createApplicationForm.module.scss'\nimport { Block } from '../../components'\nimport notification from '../../components/Notification'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary'\n\nconst { Option, OptGroup } = Select\n\nfunction handleChange(value: any) {\n    console.log(`selected ${value}`);\n  }\n\ntype CreateApplicationType = {\n  createApplication: Function\n  setNewApplicationFlag: Function\n  organizations: []\n  serviceProfiles: []\n  visible: boolean\n}\n\n\nexport const CreateApplicationForm: React.FC<CreateApplicationType> = ({ organizations, visible, serviceProfiles, createApplication, setNewApplicationFlag}) => { \n    let serviceProfilesOnSelect: any = []\n    serviceProfiles.forEach((serviceProfile: any) => serviceProfilesOnSelect.push(<Option \n                                                                                    value={serviceProfile.id}\n                                                                                    key={serviceProfile.id}\n                                                                                  >{serviceProfile.name}\n                                                                                  </Option>))\n    const [form] = Form.useForm()  \n    const organizationsOnSelect: any = []\n    organizations.forEach((organization: any) => organizationsOnSelect.push(<Option \n                                                                                value={organization.id}\n                                                                                key={organization.id}\n                                                                            >{organization.displayName}\n                                                                            </Option>))\n    const[disabled, setButtonType] = useState(false)\n    \n    const onFinish = (values: any) => {\n        createApplication(values)\n        form.resetFields()\n        setNewApplicationFlag(false)\n    }\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo)\n    }\n    \n return(\n   \n  <Modal\n    title=\"Create Application\"\n    visible={visible}\n    onCancel={() => setNewApplicationFlag(false)}\n    footer={false}\n  > \n    <Form\n      form={form}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n    <Form.Item \n        name=\"name\" \n        label=\"name\" \n        rules={[{ required: true, message: 'Please input name!' }]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n        name=\"description\" \n        label=\"description\" \n        rules={[{ required: true, message: 'Please input description!' }]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n          name=\"serviceProfileID\" \n          label=\"serviceProfileID\" \n          rules={[{ required: true, message: 'Please choise serviceProfileID!' }]}\n        >      \n          <Select\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {serviceProfilesOnSelect}\n          </Select>\n        </Form.Item>\n        <Form.Item \n          name=\"organizationID\" \n          label=\"organizationID\" \n          rules={[{ required: true, message: 'Please choise organizationID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {organizationsOnSelect}\n          </Select>\n        </Form.Item>\n      <Form.Item \n      >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n          Allow\n        </Button>\n      </Form.Item>\n    </Form>        \n</Modal>\n        \n )\n}\n\n\n","import React, { useState } from 'react'\nimport { Form, Input, Button, Tooltip, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport style from './createApplicationForm.module.scss'\nimport { NumericInput } from '../../components'\n\nconst { Option } = Select\n\nfunction handleChange(value: any) {\n    console.log(`selected ${value}`);\n  }\n\ntype CreateDeviceProfile = {\n  createDeviceProfile: Function\n  setNewDeviceProfile: Function\n  organizations: []\n  networkServers: [] \n  visible: boolean\n}\n\n\n\n\nexport const CreateDeviceProfileForm: React.FC<CreateDeviceProfile> = ({ organizations, visible,  createDeviceProfile, networkServers, setNewDeviceProfile, ...props}) => { \n    let networkServersOnSelect: any = []\n    networkServers.forEach((networkServer: any) => networkServersOnSelect.push(<Option \n                                                                                    value={networkServer.id}\n                                                                                    key={networkServer.id}\n                                                                                >{networkServer.name+ ' '+ networkServer.server}\n                                                                                </Option>))\n    const [form] = Form.useForm()  \n    const organizationsOnSelect: any = []\n    organizations.forEach((organization: any) => organizationsOnSelect.push(<Option \n                                                                                value={organization.id}\n                                                                                key={organization.id}\n                                                                            >{organization.displayName}\n                                                                            </Option>))\n    const[disabled, setButtonType] = useState(false)\n\n    const onFinish = (values: any) => {\n        console.log(values)\n        createDeviceProfile(values)\n        form.resetFields()\n        setNewDeviceProfile(false)\n    }\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo)\n    }\n    \n return(\n   \n  <Modal\n    title=\"Create Device profile\"\n    visible={visible}\n    onCancel={() => setNewDeviceProfile(false)}\n    footer={false}\n  > \n    <Form\n      form={form}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n    <Form.Item \n        name=\"name\" \n        label=\"name\" \n        rules={[{ required: true, message: 'Please input name!' }]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n        name=\"description\" \n        label=\"description\" \n        rules={[{ required: true, message: 'Please input description!' }]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n          name=\"macVersion\" \n          label=\"macVersion\" \n          rules={[{ required: true, message: 'Please choise macVersion!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            <Option key={'1.0.0'} value={'1.0.0'}>1.0.0</Option>\n            <Option key={'1.0.1'} value={'1.0.1'}>1.0.1</Option>\n            <Option key={'1.0.2'} value={'1.0.2'}>1.0.2</Option>\n            <Option key={'1.0.3'} value={'1.0.3'}>1.0.3</Option>\n            <Option key={'1.1.0'} value={'1.1.0'}>1.1.0</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item \n          name=\"regParamsRevision\" \n          label=\"Class\" \n          rules={[{ required: true, message: 'Please choise Class!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            <Option key={'A'} value={'A'}>A</Option>\n            <Option key={'B'} value={'B'}>B</Option>\n            \n          </Select>\n        </Form.Item>\n    <Form.Item \n          name=\"networkServerID\" \n          label=\"networkServerID\" \n          rules={[{ required: true, message: 'Please choise networkServerID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {networkServersOnSelect}\n          </Select>\n        </Form.Item>\n        <Form.Item \n          name=\"organizationID\" \n          label=\"organizationID\" \n          rules={[{ required: true, message: 'Please choise organizationID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {organizationsOnSelect}\n          </Select>\n        </Form.Item>\n        <Form.Item \n        name=\"supportsJoin\" \n        label=\"Device support OTAA\" \n    >    \n        <Switch/>\n    </Form.Item>\n    <Form.Item \n        \n        name=\"rxFreq2\" \n        label=\"RX2 channel frequency\" \n        rules={[{ required: true, message: 'Please input RX2 channel frequency!' },\n        ({ getFieldValue }) => ({\n          validator(rule, value) {\n            if (!value || /^([\\d,])*$/.test(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject('Number is required!');\n          }\n        }),]}\n    >    \n   \n        <Input maxLength={10}/>\n     \n    </Form.Item>\n    {/* <Form.Item \n        \n        name=\"factoryPresetFreqs\" \n        label=\"Factory-preset frequencies\" \n        rules={[{ required: true, message: 'Please input RX2 channel frequency!' },\n        ({ getFieldValue }) => ({\n          validator(rule, value) {\n            if (!value || /^[\\d( )]*$/.test(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject('Number is required!');\n          }\n        }),]}\n    >    \n   \n        <Input maxLength={10}/>\n     \n    </Form.Item> */}\n    <Form.Item \n          name=\"payloadCodec\" \n          label=\"Payload codec\" \n         // rules={[{ required: true, message: 'Please choise Class!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={''}\n          >\n            <Option key={'Cayenne LPP'} value={'Cayenne LPP'}>Cayenne LPP</Option>\n            \n          </Select>\n        </Form.Item>\n      <Form.Item \n      >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n          Allow\n        </Button>\n      </Form.Item>\n    </Form>        \n</Modal>\n        \n )\n}\n\n\n","import React, { useState } from 'react'\nimport { Form, Input, Button, Tooltip, Switch, Modal, Select, Row, Col, Layout } from 'antd'\nimport style from './createDeviceForm.module.scss'\n\n\nconst { Option } = Select\n\nfunction handleChange(value: any) {\n    console.log(`selected ${value}`);\n  }\n\ntype CreateDeviceProps = {\n  createDevice: Function\n  setNewDeviceFlag: Function\n  applications: []\n  deviceProfiles: [] \n  visible: boolean\n}\n\n\n\n\nexport const CreateDeviceForm: React.FC<CreateDeviceProps> = ({ applications, visible,  createDevice, deviceProfiles, setNewDeviceFlag, ...props}) => { \n    let applicationsOnSelect: any = []\n    applications.forEach((application: any) => applicationsOnSelect.push(<Option \n                                                                                    value={application.id}\n                                                                                    key={application.id}\n                                                                                >{application.name}\n                                                                                </Option>))\n    const [form] = Form.useForm()  \n    const deviceProfilesOnSelect: any = []\n    deviceProfiles.forEach((devicaProfile: any) => deviceProfilesOnSelect.push(<Option \n                                                                                value={devicaProfile.id}\n                                                                                key={devicaProfile.id}\n                                                                            >{devicaProfile.name}\n                                                                            </Option>))\n    const[disabled, setButtonType] = useState(false)\n\n    const onFinish = (values: any) => {\n        console.log(values)\n        createDevice(values)\n        form.resetFields()\n        setNewDeviceFlag(false)\n    }\n    const onFinishFailed = (errorInfo: any) => {\n      console.log('Failed:', errorInfo)\n    }   \n return(  \n  <Modal\n    title=\"Create Device \"\n    visible={visible}\n    onCancel={() => setNewDeviceFlag(false)}\n    footer={false}\n  > \n    <Form\n      form={form}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n    <Form.Item \n        name=\"name\" \n        label=\"name\" \n        rules={[{ required: true, message: 'Please input name!' }]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n        \n        name=\"devEUI\" \n        label=\"devEUI\" \n        rules={[{ required: true, message: 'Please input devEUI!' },\n        () => ({\n          validator(rule, value) {\n            if (!value || /^([\\dabcdef])*$/.test(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject('devEUI is hex consists of 16 symbols!');\n          }\n        }),]}\n    >    \n   \n        <Input maxLength={16} minLength={16}/>\n     \n    </Form.Item>\n    <Form.Item \n        name=\"description\" \n        label=\"description\" \n        rules={[]}\n    >    \n     <Input />\n    </Form.Item>\n    <Form.Item \n          name=\"applicationID\" \n          label=\"applicationID\" \n          rules={[{ required: true, message: 'Please choise applicationID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {applicationsOnSelect}\n          </Select>\n        </Form.Item>\n        <Form.Item \n          name=\"deviceProfileID\" \n          label=\"deviceProfileID\" \n          rules={[{ required: true, message: 'Please choise deviceProfileID!' }]}\n        >      \n          <Select\n           // mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"\"\n            onChange={handleChange}\n            defaultValue={[]}\n          >\n            {deviceProfilesOnSelect}\n          </Select>\n        </Form.Item>     \n    {/* <Form.Item  \n        name=\"referenceAltitude\" \n        label=\"referenceAltitude\" \n        rules={[{ required: true, message: 'Please input referenceAltitude!' },\n        ]}\n    >    \n        <Input />\n    </Form.Item> */}\n    <Form.Item  >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n          Allow\n        </Button>\n      </Form.Item>\n    </Form>        \n</Modal>    \n )\n}\n\n\n","import React, { useEffect, useState } from 'react'\nimport { Card, Empty } from 'antd'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary'\nimport { CreateUserForm } from '../../../modules'\n\ntype OrganizationProps = {\n    displayName: string,\n    id: any,\n    users: any,\n    createdAt: any,\n    getOrganizationsUsers: Function,\n    getOrganizations: Function,\n    organizations: any,\n    createUser: Function\n}\n\nconst Organization: React.FC<OrganizationProps> = ({id, createUser, getOrganizations, getOrganizationsUsers, displayName, organizations, users}) => {\n    const[newUserVisible, setNewUserFormVisible] = useState(false)\n    useEffect(() => {\n        //if(users[id] === undefined){\n            getOrganizationsUsers(id)\n        //}\n    }, [organizations])\n    return (\n        <ErrorBoundary>\n            <Card \n            style={{ marginLeft: 15, marginTop: 15, marginRight: 15, width: 270 }}\n            title={displayName} \n            extra={<PlusCircleTwoTone onClick={() => setNewUserFormVisible(true)}/>}\n            loading={users[id] === undefined} \n        >\n        {\n              users[id] === undefined \n             ? <></> \n             : <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'column'}}>\n                 {  \n                    users[id].users.length === 0\n                    ? <Empty description={false} image={Empty.PRESENTED_IMAGE_SIMPLE} />  \n                    : users[id].users.map((user: any) => <p key={user.id}>{user.email}</p>) \n                 }\n               </div> \n        }\n      </Card>\n            <CreateUserForm createUser={createUser} getOrganizations={getOrganizations} visible={newUserVisible} setNewUserFormVisible={setNewUserFormVisible} organizations={organizations}/>\n        </ErrorBoundary>\n    )\n}\n\nexport default Organization","import React from 'react'\nimport { fetchOrganizationsUsers } from './../../../redux/selectors/organizationsSelector';\nimport { AppState } from './../../../redux/store';\nimport { getOrganizationsUsers } from './../../../redux/reducers/organizationsReducer';\nimport Organization from '../components/Organization'\nimport { connect } from 'react-redux'\n\nlet mapStateToProps = (state: AppState) => ({\n    users: fetchOrganizationsUsers(state)\n})\n\nexport default connect(mapStateToProps,{getOrganizationsUsers})(React.memo(Organization))","import React from 'react'\nimport { Input, Tooltip } from 'antd';\nimport Form from 'antd/lib/form/Form';\n\nfunction formatNumber(value) {\n  value += '';\n  const list = value.split('.');\n  const prefix = list[0].charAt(0) === '-' ? '-' : '';\n  let num = prefix ? list[0].slice(1) : list[0];\n  let result = '';\n  while (num.length > 3) {\n    result = `,${num.slice(-3)}${result}`;\n    num = num.slice(0, num.length - 3);\n  }\n  if (num) {\n    result = num + result;\n  }\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : ''}`;\n}\n\nclass NumericInput extends React.Component {\n  onChange = e => {\n    const { value } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      this.props.onChange(value);\n    }\n  };\n\n  // '.' at the end or only '-' in the input box.\n  onBlur = () => {\n    const { value, onBlur, onChange } = this.props;\n    let valueTemp = value;\n    if (value.charAt(value.length - 1) === '.' || value === '-') {\n      valueTemp = value.slice(0, -1);\n    }\n    onChange(valueTemp.replace(/0*(\\d+)/, '$1'));\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  render() {\n    const { value } = this.props;\n    const title = value ? (\n      <span className=\"numeric-input-title\">{value !== '-' ? formatNumber(value) : '-'}</span>\n    ) : (\n      'Input a number'\n    );\n    return (\n      <Form.Item \n      name=\"rxFreq2\" \n      label=\"RX2 channel frequency\" \n      rules={[{ required: true, message: 'Please input RX2 channel frequency!' }]}\n  >    \n \n <Input\n          {...this.props}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          placeholder=\"Input a number\"\n          maxLength={25}\n        />\n   \n  </Form.Item>\n        \n\n    );\n  }\n}\n\nclass NumericInputDemo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { value: '' };\n    }\n  \n    onChange = value => {\n      this.setState({ value })\n      return this.state.value\n    };\n  \n    render() {\n      return (\n        <NumericInput style={{ width: 120 }} value={this.state.value} onChange={this.onChange} />\n      );\n    }\n  }\n\nexport default NumericInputDemo","import React, {useState, Context} from 'react'\nimport { Form, Input, Button, Checkbox,  Row, Col, Layout } from 'antd'\nimport style from './login.module.scss'\nimport { Block } from '../../../components'\nimport notification from '../../../components/Notification'\nimport { NavLink, Redirect } from 'react-router-dom'\n\n\n\nconst LoginForm = (props: any) => {\n  const[disabled, setButtonType] = useState(false)\n  if(localStorage.token){//localStorage.token\n    return <Redirect to='/home/organizations'/>\n  }\n  const onFinish = (values: any) => {\n    setButtonType(true)\n    props.loginUser(values)\n    .then((data: any) => window.location.reload())\n    .finally(() => setButtonType(false))\n}\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    \n    <Layout className={style.content_wrapper} style={{ minHeight: '100vh' }}>\n      <Row>\n        <Col span={8}></Col>  \n        <Col className={style.login_form_wrapper} span={8}>\n          <Block className={style.block}>\n              <div>\n                <h2>Join your account</h2>\n              </div> \n              <Form\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"username\"\n                  name=\"username\"\n                  rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"password\"\n                  name=\"password\"\n                  rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                  <Input.Password />\n                </Form.Item>\n                <Form.Item \n                >\n                  <Button type=\"primary\" htmlType=\"submit\" disabled={disabled}>\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>        \n          </Block>\n          \n        </Col>  \n        <Col span={8}></Col>  \n      </Row> \n    </Layout>\n  )\n}\n\nexport default LoginForm","\nimport { default as axios } from '../core/axios';\n\nexport const authAPI = {\n    authUser:  (authData: any) => {\n        let response =  axios.post('/api/chirpLogin', authData)\n            .then((res: any) => res\n            )\n            .catch((error: any) => {\n              throw new Error('bla')\n            })\n            return response\n    },\n}\nexport default authAPI","import { LockOutlined } from '@ant-design/icons';\nimport { authAPI } from '../../API/authAPI';\nimport redux from 'redux'\nimport notification from '../../components/Notification';\n\nconst initialstate = {\n    token: null,\n}\n\n\n\nconst userReducer = (state: any = initialstate, action: any) => {\n    switch(action.type){\n        case 'SET_TOKEN': {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n        default: return state\n    }\n}\n\nconst setToken = (token: string) => ({type: 'SET_TOKEN', token})\n\nexport const logout = () => async (dispatch: redux.Dispatch) => {\n    window.localStorage.removeItem('token')\n    window.location.reload()\n}\n\nexport const loginUser = (authData: any) =>  (dispatch: redux.Dispatch) =>  {\n    return new Promise((resolve: any, reject: any) => {\n        authAPI.authUser({email: authData.username, password:authData.password})\n        .then((response) => {\n            resolve()\n            window.localStorage.setItem(\"token\", response.data.jwt)\n            notification({\n                text: \"nice to meet you!)\",\n                type: 'success',\n                title: \"Success!\",\n                duration: 5\n            })\n        return response\n        })\n        .catch((error: any) => {\n            reject()\n            notification({text: \"Invalid email or password\",\n            type: 'error',\n            title: \"Oops...\",\n            duration: 5})\n            return new Error()\n        }) \n    }) \n}\n\nexport default userReducer","import containers from './containers'\n\nexport default containers","import { default as LoginComponents } from '../components'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../../redux/reducers/loginReducer'\n\n\nconst mapStateToProps = (state: any) => ({\n    \n})\n\nexport default connect(null, {loginUser})(LoginComponents)","import React from 'react'\nimport { Result, Button } from 'antd';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport style from './index.module.scss'\n\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false, errorStatus: 0 };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error, errorInfo) {\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\n      console.log(error, errorInfo);\n    }\n  \n    render() {\n      if (this.state.hasError && this.props.errorStatus === 1) {\n        // Можно отрендерить запасной UI произвольного вида\n        return (\n            <Result\n               // style={{height: '100vh', display: 'flex',flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'center'}}\n                className={style.wrapper}\n                status=\"500\"\n                title=\"Hm...\"\n                subTitle=\"Sorry, something went wrong.\"\n                extra={<Button type=\"primary\"><NavLink to='home'>Back Home</NavLink></Button>}\n            />\n        );\n      }\n  \n      return this.props.children; \n    }\n  }\n\n  export default ErrorBoundary","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { Route } from 'react-router-dom'\nimport { ServiceProfilesPage, DevicesPage, Organizations, ApplicationsPage, DeviceProfilesPage } from '../../../pages'\nimport ErrorBoundary from '../../../core/ErrorBoundary';\nimport {\n  LogoutOutlined,\n  AppstoreOutlined,\n  ClusterOutlined,\n  ProfileOutlined,\n  FontColorsOutlined,\n  SnippetsOutlined,\n} from '@ant-design/icons'\n\n\nconst { Sider } = Layout;\n\n\nconst Home = (props:any) => {\n      let [ collapsed, setEditMode ] = useState(true)\n      let changeEditMode = () => {\n          if(collapsed == false){\n              setEditMode(true)\n          } else {\n              setEditMode(false)\n          }\n      }\n      if(!localStorage.token || localStorage.token === undefined){\n        return (\n          <Redirect to='/'/>\n        )\n      }\n      \n          return (\n          <ErrorBoundary>\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sider width={'12vw'}  collapsedWidth={80} collapsed={collapsed} onCollapse={changeEditMode} onMouseEnter={() => (setEditMode(false))} onMouseLeave={() => (setEditMode(true))}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"> \n                  <Menu.Item key=\"1\">\n                    <NavLink to=\"/home/organizations\">\n                    <AppstoreOutlined />\n                      <span>Organizations</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"2\">\n                    <NavLink to=\"/home/serviceProfiles\">\n                    <SnippetsOutlined />\n                      <span>Service Profiles</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"3\">\n                    <NavLink to=\"/home/applications\">\n                    <FontColorsOutlined />\n                      <span>Applications</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"4\">\n                    <NavLink to=\"/home/deviceProfiles\">\n                    <ProfileOutlined />\n                      <span>Device profiles</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item key=\"5\">\n                    <NavLink to=\"/home/devices\">\n                    <ClusterOutlined />\n                      <span>Devices</span>\n                    </NavLink>\n                  </Menu.Item>\n                  <Menu.Item onClick={() => props.logout()}key=\"6\">\n                    <NavLink to=\"/home/orders\">\n                    <LogoutOutlined/>\n                      <span>Logout</span>\n                    </NavLink>\n                  </Menu.Item>\n                </Menu>\n              </Sider>\n              <Layout className=\"site-layout\">\n              <Route path=\"/home/organizations/\" render = { () => <Organizations/>}/>\n              <Route path=\"/home/devices\" render = { () => <DevicesPage/>}/>\n              <Route path=\"/home/serviceProfiles\" render = { () => <ServiceProfilesPage/>}/>\n              <Route path=\"/home/applications\" render = { () => <ApplicationsPage/>}/>\n              <Route path=\"/home/deviceProfiles\" render = { () => <DeviceProfilesPage/>}/>\n              </Layout>\n            </Layout>\n            </ErrorBoundary>\n          )\n      }\n\nexport default Home\n\n","import Home from './containers'\n\nexport default Home","import  HomeComponent from '../components'\nimport { logout } from '../../../redux/reducers/loginReducer';\nimport { AppState } from './../../../redux/store';\nimport { connect } from 'react-redux'\n\n\nlet mapStateToProps = (state: AppState) => ({\n})\n\nexport default connect(mapStateToProps, {logout})(HomeComponent)\n\n","import React, { useState, useEffect } from 'react'\nimport { CreateOrganizationForm, CreateUserForm } from '../../../modules'\nimport style from './organization.module.scss'\nimport { Empty, Card, PageHeader } from 'antd'\nimport { Redirect } from 'react-router-dom'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport { Organization } from '../../../components/Organization'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\n\ntype OrganizationsProps = {\n    createOrganization: Function,\n    getOrganizations: Function,\n    organizations: any,\n    createUser: Function\n}\n\nconst OrganizationsPage: React.FC<OrganizationsProps> = ({createUser, createOrganization, getOrganizations, organizations}) => { \n const[newOrganizationFlag, setNewOrganizationFlag] = useState(false)\n useEffect(() => {\n    if (organizations.length === 0) {\n       getOrganizations() \n    }\n },[organizations])\n \n    return (\n        <ErrorBoundary errorMessage={'errorMessage'} errorStatus={1}>\n            <div className={style.content_wrapper}>\n            <PageHeader\n              className=\"site-page-heade\"\n              title=\"Organizations:\"\n              subTitle={<PlusCircleTwoTone onClick={() => setNewOrganizationFlag(true)}\n              style={{backgroundSize: '450px'}}/>}\n            /> \n            <CreateOrganizationForm getOrganizations={getOrganizations} createOrganization={createOrganization} setNewOrganizationFlag={setNewOrganizationFlag}visible={newOrganizationFlag}/>\n            {\n                organizations === null \n                ? <Card \n                style={{ marginLeft: 15, marginRight: 15, width: '100%', height: '80vh' }}\n                loading={organizations === null} \n            /> \n                : <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                    organizations.length === 0\n                    ? <div style={{display: 'flex', justifyContent: 'center', flexGrow: 1}}><Empty/></div> \n                    : organizations.map((organization: any) => \n                                                              <Organization \n                                                                    createUser={createUser}\n                                                                    getOrganizations={getOrganizations}\n                                                                    organizations={organizations}\n                                                                    key={organization.id}\n                                                                    id={organization.id} \n                                                                    displayName={organization.displayName} \n                                                                    createdAt={organization.createdAt}\n                                                              />\n                                                            )\n                    }\n                  </div> \n            }\n        </div>\n        </ErrorBoundary>\n        \n    )\n}\n\nexport default OrganizationsPage\n\n","import { AppState } from './../store'\nimport { createSelector } from 'reselect'\n\nconst getDevices = (state: AppState) => {\n    return state.devicesReducer.devices\n}\n\nexport const fetchDevices = createSelector(getDevices, (devices: any) => {\n    return devices \n})\n\n\n\n","import { AppState } from './../store'\nimport { createSelector } from 'reselect'\n\nconst getNetworkServers = (state: AppState) => {\n    return state.serviceProfileReducer.networkServers\n}\n\nconst getServiceProfiles = (state: AppState) => {\n    return state.serviceProfileReducer.serviceProfiles\n}\n\nexport const fetchNetworkServers = createSelector(getNetworkServers, (networkServers: any) => {\n    return networkServers \n})\n\nexport const fetchServiceProfiles = createSelector(getServiceProfiles, (serviceProfiles: any) => {\n    return serviceProfiles \n})\n\n\n\n","import { AppState } from './../store'\nimport { createSelector } from 'reselect'\n\nexport const fetchApplications = createSelector((state: AppState) => state.applicationsReducer.applications, (devices: any) => devices)\n\n\n\n","import { AppState } from './../store'\nimport { createSelector } from 'reselect'\n\nexport const fetchDeviceProfiles = createSelector((state: AppState) => state.deviceProfilesReducer.deviceProfiles, (deviceProfiles: any) => deviceProfiles)\n\n\n\n","import  Organizations from './containers'\n\nexport default Organizations","import OrganizationsPage from \"../components/organization\";\nimport { connect } from \"react-redux\";\nimport { createOrganization, getOrganizations, createUser } from \"../../../redux/reducers/organizationsReducer\";\nimport { AppState } from \"../../../redux/store\";\nimport { fetchOrganizations } from \"../../../redux/selectors\";\n\nlet mapStateToProps = (state: AppState) =>({\n    organizations: fetchOrganizations(state)\n})\n\nexport default connect(mapStateToProps, {createOrganization, createUser, getOrganizations})(OrganizationsPage)\n\n\n","import React, { memo, useState, useEffect } from 'react'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\nimport style from './devices.module.scss'\nimport { Empty, Card, PageHeader } from 'antd'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport { CreateDeviceForm } from '../../../modules'\n\n\ntype devicesPageProps = {\n    getApplications: Function,\n    getDevices: Function,\n    createDevice: Function,\n    getDeviceProfiles: Function,\n    applications: [] | null,\n    devices: [] | null,\n    deviceProfiles: [] | null\n}\n\n\nconst devicesPage:React.FC<devicesPageProps> = memo(({getApplications, applications, devices, getDevices, createDevice, getDeviceProfiles, deviceProfiles}, ...props) => {\n    const[newDeviceFlag, setNewDeviceFlag] = useState(false)\n useEffect(() => {\n    getApplications()\n    getDevices()\n    getDeviceProfiles()\n },[])\n \n    return (\n        <ErrorBoundary errorMessage={'errorMessage'} errorStatus={1}>\n            {(applications !== null && deviceProfiles !== null) ? <CreateDeviceForm \n                                                                        createDevice={createDevice}\n                                                                        applications={applications} \n                                                                        visible={newDeviceFlag} \n                                                                        deviceProfiles={deviceProfiles}\n                                                                        setNewDeviceFlag={setNewDeviceFlag}\n                                                                    />   : React.Fragment         }\n            <div className={style.content_wrapper}>\n            <PageHeader\n              className=\"site-page-heade\"\n              title=\"Devices:\"\n              subTitle={<PlusCircleTwoTone onClick={() => setNewDeviceFlag(true)}\n              style={{backgroundSize: '450px'}}/>}\n            /> \n            {\n                devices === null  \n                ? <Card \n                style={{ marginLeft: 15, marginRight: 15, width: '100%', height: '100vh' }}\n                loading={devices === null} \n            /> \n                : <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                    {\n                    devices.length === 0\n                    ? <div style={{display: 'flex', justifyContent: 'center', flexGrow: 1}}><Empty/></div> \n                    : devices.map((device: any) => \n                    <Card\n                    style={{ marginLeft: 15, marginRight: 15, marginTop: 15, width: '20vw' }}\n                    title={device.name}\n                    type=\"inner\" \n                 >\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                       <p>devEUI: {device.devEUI}</p>  \n                       <p>name: {device.name}</p>\n                       <p>applicationID: {device.applicationID}</p>\n                       <p>description: {device.description}</p>\n                       <p>deviceProfileName: {device.deviceProfileName}</p>\n                       <p>deviceStatusBattery: {device.deviceStatusBattery}</p>\n                       <p>deviceStatusMargin: {device.deviceStatusMargin}</p>\n                       <p>deviceStatusExternalPowerSource: {device.deviceStatusExternalPowerSource}</p>\n                       <p>deviceStatusExternalPowerSource: {device.deviceStatusExternalPowerSource}</p>\n                       <p>deviceStatusBatteryLevelUnavailable: {device.deviceStatusBatteryLevelUnavailable}</p>\n                       <p>deviceStatusBatteryLevel: {device.deviceStatusBatteryLevel}</p>\n                       <p>lastSeenAt: {device.lastSeenAt}</p>\n                    </div>\n                    \n\n                </Card>\n                                                            )\n                    }\n                  </div>\n                  \n            }\n        </div>\n        </ErrorBoundary>\n        \n    )})\n\nexport default React.memo(devicesPage)\n\n","import { default as axios } from '../core/axios';\nimport Notification from '../components/Notification';\n\nconst applicationsAPI = {\n    getApplications: async () => {\n        try {\n            let response = await axios.get('/api/applications')\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.request.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    createApplication: async (application: any) => {\n        try {\n            let response = await axios.post('/api/applications', application)\n            Notification({\n                text: 'Application was created!',\n                type: 'success',\n                title: \"Success!\"\n              })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n}\n\nexport default applicationsAPI","import applicationsAPI  from '../../API/applicationsAPI';\nimport redux from 'redux'\n\nconst initialState = {\n    applications: null,\n}\n\nexport let applicationsReducer = (state: any = initialState, action: any) => {\n    switch(action.type){\n        case 'SET_APPLICATIONS': {\n            return {\n                ...state, applications: action.applications.data.result\n            }\n        }\n        default: \n            return state\n    }\n} \n\nconst setApplictions = (applications: any) => ({type: 'SET_APPLICATIONS', applications})\n\nexport let getApplications = () => async (dispatch: redux.Dispatch) => {\n   try {\n    let response = await applicationsAPI.getApplications()\n    dispatch(setApplictions(response))\n   } catch(err){\n      console.log(err)\n   } \n}\n\nexport let createApplication = (application: any) => async (dispatch: redux.Dispatch) => {\n    try {\n     let response = await applicationsAPI.createApplication({\n        \"application\": {\n          \"description\": application.description,\n          \"name\": application.name,\n          \"organizationID\": application.organizationID,\n          \"serviceProfileID\": application.serviceProfileID\n          //\"payloadCodec\": \"string\",\n          //\"payloadDecoderScript\": \"string\",\n          //\"payloadEncoderScript\": \"string\",\n        }\n      })\n     response = await applicationsAPI.getApplications()\n     dispatch(setApplictions(response))\n     return response \n    } catch(error){\n        \n    } \n }\n\nexport default applicationsReducer\n\n","import { default as axios } from '../core/axios';\nimport Notification from '../components/Notification';\n\n\n\nexport const devicesAPI = {\n    getDevices: async () => {\n        try {\n            let response = await axios.get('/api/devices')\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    createDevice: async (device: any) => {\n        try {\n            let response = await axios.post('/api/devices', device)\n            Notification({\n                text: 'DeviceProfile was created!',\n                type: 'success',\n                title: \"Success!\"\n              })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n}\nexport default devicesAPI","import { devicesAPI } from './../../API/devicesAPI';\nimport redux from 'redux'\nimport Notification from '../../components/Notification';\n\nconst initialState = {\n    devices: null\n}\n\nexport let devicesReducer = (state: any = initialState, action: any) => {\n    switch(action.type){\n        case 'SET_DEVICES': {\n            return {\n                ...state, devices: action.devices.data.result\n            }\n        }\n        default: \n            return state\n    }\n} \n\n\nconst setDevices = (devices: any) => ({type: 'SET_DEVICES', devices})\n\nexport let getDevices = () => async (dispatch: redux.Dispatch) => {\n   try {\n    let response = await devicesAPI.getDevices()\n    await(dispatch(setDevices(response)))\n\n   } catch{\n       throw new Error('error')\n   } \n}\n\nexport let createDevice = (device: any) => async (dispatch: redux.Dispatch) => {\n    try {\n        let response = await devicesAPI.createDevice({\n            \"device\": {\n              \"applicationID\": device.applicationID,\n              \"description\": device.description,\n              \"devEUI\": device.devEUI,\n              \"deviceProfileID\": device.deviceProfileID,\n              \"name\": device.name,//\n              \"referenceAltitude\": device.referenceAltitude\n            }\n          })\n        response = await devicesAPI.getDevices()\n        dispatch(setDevices(response))\n        return response \n       } catch(error){\n           \n       } \n }\n\n\n\nexport default devicesReducer\n\n","import { default as axios } from '../core/axios';\nimport Notification from '../components/Notification';\n\nconst deviceProfilesAPI = {\n    getDeviceProfiles: async () => {\n        try {\n            let response = await axios.get('/api/deviceProfiles')\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    createDeviceProfiles: async (deviceProfile: any) => {\n        try {\n            let response = await axios.post('/api/deviceProfiles', deviceProfile)\n            Notification({\n                text: 'DeviceProfile was created!',\n                type: 'success',\n                title: \"Success!\"\n              })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n}\n\nexport default deviceProfilesAPI","import redux from 'redux'\nimport deviceProfilesAPI from '../../API/deviceProfilesAPI'\n\nconst initialState = {\n    deviceProfiles: null,\n}\n\nexport let deviceProfilesReducer = (state: any = initialState, action: any) => {\n    switch(action.type){\n        case 'SET_DEVICE_PROFILES': {\n            return {\n                ...state, deviceProfiles: action.deviceProfiles.data.result\n            }\n        }\n        default: \n            return state\n    }\n} \n\nconst setDeviceProfiles = (deviceProfiles: any) => ({type: 'SET_DEVICE_PROFILES', deviceProfiles})\n\nexport let getDeviceProfiles = () => async (dispatch: redux.Dispatch) => {\n   try {\n    let response = await deviceProfilesAPI.getDeviceProfiles()\n    dispatch(setDeviceProfiles(response))\n   } catch(err){\n      console.log(err)\n   } \n}\n\nexport let createDeviceProfile = (deviceProfile: any) => async (dispatch: redux.Dispatch) => {\n    try {\n     let response = await deviceProfilesAPI.createDeviceProfiles({\n        \"deviceProfile\": {\n         /*Device-profile name*/ \n         \"name\": deviceProfile.name, //required\n         /*Lorawan version*/\n         \"macVersion\": deviceProfile.macVersion, //TZ \n         /*Class*/\n         \"regParamsRevision\": deviceProfile.regParamsRevision,//TZ (A,B)\n         /*Device support OTAA*/  \n         \"supportsJoin\": deviceProfile.supportsJoin,//TZ \n         /*RX2 channel frequency (Hz)*/\n         \"rxFreq2\": deviceProfile.rxFreq2,//TZ int\n         /*Factory-preset frequencies (Hz)*/\n         //\"factoryPresetFreqs\": [parseInt(deviceProfile.factoryPresetFreqs)],\n         /*Payload codec*/\n         \"payloadCodec\": deviceProfile.payloadCodec,\n         \"networkServerID\": deviceProfile.networkServerID, //required\n          \"organizationID\": deviceProfile.organizationID  //required\n        }\n      })\n     response = await deviceProfilesAPI.getDeviceProfiles()\n     dispatch(setDeviceProfiles(response))\n     return response \n    } catch(error){\n        \n    } \n }\n\nexport default deviceProfilesReducer\n\n","import devicesPage from './containers/devicesPageContainer'\n\nexport default devicesPage","import devicesPage from '../components/devicesPage'\nimport { connect } from 'react-redux'\nimport { AppState } from '../../../redux/store'\nimport { fetchDevices, fetchApplications, fetchDeviceProfiles } from '../../../redux/selectors'\nimport { getApplications } from '../../../redux/reducers/applicationsReducer'\nimport { getDevices, createDevice } from '../../../redux/reducers/devicesReducer'\nimport { getDeviceProfiles } from '../../../redux/reducers/deviceProfileReducer'\n\nlet mapStateToProps = (state: AppState) => ({\n    applications: fetchApplications(state),\n    devices: fetchDevices(state),\n    deviceProfiles: fetchDeviceProfiles(state)\n})\n\nexport default connect(mapStateToProps, {getApplications, getDevices, createDevice, getDeviceProfiles})(devicesPage)","import { default as axios } from '../core/axios';\nimport Notification from '../components/Notification';\n\n\n\nexport const serviceProfilesAPI = {\n    getNetworkServers: async () => {\n        try {\n            let response = await axios.get('/api/networkServers')\n            // Notification({\n            //     type: 'success',\n            //     title: \"Network Servers list was received!\"\n            //   })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    getServiceProfiles: async () => {\n        try {\n            let response = await axios.get('/api/serviceProfiles')\n            // Notification({\n            //     type: 'success',\n            //     title: \"Service profiles list was received!\"\n            //   })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n    createServiceProfiles: async (ServiceProfile: any) => {\n        try {\n            let response = await axios.post('/api/serviceProfiles', ServiceProfile)\n            Notification({\n                text: 'Service profile was created!',\n                type: 'success',\n                title: \"Success!\"\n              })\n            return (response)\n        } catch(err) {\n            if(err.response){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Access denied or internal service error was received\"\n                  })\n            } else if (err.request){\n                throw new Error(err),\n                Notification({\n                    text: err.response.data.error,\n                    type: 'error',\n                    title: \"Server not found\"\n                  })\n            } else {\n                throw new Error(err),\n                Notification({\n                    text: 'Something went wrong',\n                    type: 'error',\n                    title: \"Oops...\"\n                  })\n            }\n        }\n    },\n}\nexport default serviceProfilesAPI","import { serviceProfilesAPI } from './../../API/serviceProfilesAPI';\nimport { devicesAPI } from './../../API/devicesAPI';\nimport redux from 'redux'\nimport Notification from '../../components/Notification';\n\nconst initialState = {\n    networkServers: null,\n    serviceProfiles: null\n}\n\nexport let networkServersReducer = (state: any = initialState, action: any) => {\n    switch(action.type){\n        case 'SET_NETWORK_SERVERS': {\n            return {\n                ...state, networkServers: action.networkServers.data.result\n            }\n        }\n        case 'SET_SERVICE_PROFILES': {\n            return {\n                ...state, serviceProfiles: action.serviceProfiles.data.result\n            }\n        }\n        default: \n            return state\n    }\n} \n\n\nconst setNetworkServers = (networkServers: any) => ({type: 'SET_NETWORK_SERVERS', networkServers})\nconst setServiceProfiles = (serviceProfiles: any) => ({type: 'SET_SERVICE_PROFILES', serviceProfiles})\n\nexport let getNetworkServers = () => async (dispatch: redux.Dispatch) => {\n   try {\n    let response = await serviceProfilesAPI.getNetworkServers()\n    dispatch(setNetworkServers(response))\n   } catch(err){\n      console.log(err)\n   } \n}\n\nexport let getServiceProfiles = () => async (dispatch: redux.Dispatch) => {\n    try {\n     let response = await serviceProfilesAPI.getServiceProfiles()\n     dispatch(setServiceProfiles(response))\n    } catch(err){\n        console.log(err)\n    } \n }\n \nexport let createServiceProfile = (serviceProfile: any) => async (dispatch: redux.Dispatch) => {\n    try {\n     let response = await serviceProfilesAPI.createServiceProfiles({\n        \"serviceProfile\": {\n            \"addGWMetaData\":  serviceProfile.addGWMetaData === undefined ? false : true,\n            \"name\":serviceProfile.name,\n            \"networkServerID\": \"29\",\n            \"organizationID\": serviceProfile.organizationID,\n            \"nwkGeoLoc\": serviceProfile.nwkGeoLoc=== undefined ? false : true,\n          }\n      })\n     response = await serviceProfilesAPI.getServiceProfiles()\n     dispatch(setServiceProfiles(response))\n     return response \n    } catch(error){\n        \n    } \n    getServiceProfiles()\n }\n\nexport default networkServersReducer\n\n","import React, {useState, useEffect, memo} from 'react'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\nimport style from './serviceProfile.module.scss'\nimport { Empty, Card, PageHeader } from 'antd'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport { CreateServiceProfileForm } from '../../../modules'\n\ntype ServiceProfileProps = {\n    getServiceProfiles: Function,\n    createServiceProfile: Function,\n    getNetworkServers: Function,\n    getOrganizations: Function,\n    networkServers: [] | null,\n    serviceProfiles: [] | null,\n    organizations: [] | null\n}\n\nconst ServiceProfile: React.FC<ServiceProfileProps> = ({getOrganizations, organizations,  getServiceProfiles, createServiceProfile, getNetworkServers, serviceProfiles, networkServers, ...props}) => {\n    const[newServiceProfileFlag, setNewServiceProfileFlag] = useState(false)\n    useEffect(() => {\n        getOrganizations()\n        getNetworkServers()\n        getServiceProfiles()\n    },[])\n    return (\n        <ErrorBoundary errorMessage={'errorMessage'} errorStatus={1}>\n            {(networkServers !== null && organizations !== null) ? <CreateServiceProfileForm getServiceProfiles={getServiceProfiles} organizations={organizations} visible={newServiceProfileFlag} createServiceProfile={createServiceProfile} networkServers={networkServers} setNewServiceProfileFlag={setNewServiceProfileFlag}/>   : React.Fragment         }\n            <div className={style.content_wrapper}>\n            <PageHeader\n              className=\"site-page-heade\"\n              title=\"Service profiles:\"\n              subTitle={<PlusCircleTwoTone onClick={() => setNewServiceProfileFlag(true)}\n              style={{backgroundSize: '450px'}}/>}\n            /> \n            {\n                serviceProfiles === null  \n                ? <Card \n                style={{ marginLeft: 15, marginRight: 15, width: '100%', height: '80vh' }}\n                loading={serviceProfiles === null} \n            /> \n                : <div style={{display: 'flex', flexWrap: 'wrap' }}>\n                    {\n                    serviceProfiles.length === 0\n                    ? <div style={{display: 'flex', justifyContent: 'center', flexGrow: 1}}><Empty/></div> \n                    : serviceProfiles.map((serviceProfile: any) => \n                                                             <Card\n                                                                style={{ marginLeft: 15, marginRight: 15, marginTop: 15, width: 270 }}\n                                                                title={serviceProfile.name}\n                                                             >\n                                                                 <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                                                                 <p>networkServerID: {serviceProfile.networkServerID}</p>\n                                                                 <p>organizationID: {serviceProfile.organizationID}</p>\n                                                                 </div>\n                                                            </Card>\n                                                            )\n                    }\n                  </div> \n            }\n        </div>\n        </ErrorBoundary>\n        \n    )\n}\n\nexport default ServiceProfile\n","import ServiceProfilePage from './containers/serviceProfile'\n\nexport default ServiceProfilePage","import React from 'react'\nimport { getServiceProfiles, getNetworkServers, createServiceProfile, } from '../../../redux/reducers/serviceProfilesReducer';\nimport ServiceProfiles from '../components/serviceProfileComponent'\nimport { connect } from 'react-redux'\nimport { AppState } from '../../../redux/store'\nimport { fetchNetworkServers, fetchServiceProfiles, fetchOrganizations } from '../../../redux/selectors'\nimport { getOrganizations } from '../../../redux/reducers/organizationsReducer';\n\nlet mapStateToProps = (state: AppState) => ({\n    networkServers: fetchNetworkServers(state),\n    serviceProfiles: fetchServiceProfiles(state),\n    organizations: fetchOrganizations(state)\n})\n\nexport default connect(mapStateToProps, {getOrganizations, getServiceProfiles, getNetworkServers, createServiceProfile})(React.memo(ServiceProfiles))","import React, {useState, useEffect, memo} from 'react'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\nimport style from './applications.module.scss'\nimport { Empty, Card, PageHeader } from 'antd'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport { CreateApplicationForm } from '../../../modules'\n\ntype applicationComponentProps = {\n    createApplication: Function\n    applications: [] | null,\n    serviceProfiles: [] | null,\n    organizations: [] | null\n}\n\nconst Applications: React.FC<applicationComponentProps> = ({  organizations, createApplication, serviceProfiles, applications, ...props}) => {\n    console.log(applications)\n    const[newApplicationFlag, setNewApplicationFlag] = useState(false)\n    return (\n        <>\n            {(organizations !== null && serviceProfiles !== null) ? <CreateApplicationForm \n                                                                        createApplication={createApplication}\n                                                                        organizations={organizations} \n                                                                        visible={newApplicationFlag} \n                                                                        serviceProfiles={serviceProfiles}\n                                                                        setNewApplicationFlag={setNewApplicationFlag}\n                                                                    />   : React.Fragment         }\n            <div className={style.content_wrapper}>\n            <PageHeader\n              className=\"site-page-heade\"\n              title=\"Applications:\"\n              subTitle={<PlusCircleTwoTone onClick={() => setNewApplicationFlag(true)}\n              style={{backgroundSize: '450px'}}/>}\n            /> \n            {\n                applications === null  \n                ? <Card \n                style={{ marginLeft: 15, marginRight: 15, width: '100%', height: '80vh' }}\n                loading={applications === null} \n            /> \n                : <div style={{display: 'flex', flexWrap: 'wrap' }}>\n                    {\n                    applications.length === 0\n                    ? <div style={{display: 'flex', justifyContent: 'center', flexGrow: 1}}><Empty/></div> \n                    : applications.map((application: any) => \n                                                             <Card\n                                                                style={{ marginLeft: 15, marginRight: 15, marginTop: 15, width: 270 }}\n                                                                title={application.name}\n                                                             >\n                                                                 <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                                                                <p>id: {application.id}</p>\n                                                                <p>description: {application.description}</p>\n                                                                <p>organizationID: {application.organizationID}</p>\n                                                                \n                                                                <p>serviceProfileName: {application.serviceProfileName}</p>\n                                                                </div>\n                                                            </Card>\n                                                            )\n                    }\n                  </div> \n            }\n        </div>\n    </>\n        \n    )\n}\n\nexport default React.memo(Applications)\n","import Applications from './containers/applications'\n\nexport default Applications","import React, { useEffect } from 'react'\nimport ApplicationsComponent from '../components/applicationsComponent'\nimport { AppState } from '../../../redux/store'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { fetchApplications, fetchServiceProfiles, fetchOrganizations } from '../../../redux/selectors'\nimport { getOrganizations } from '../../../redux/reducers/organizationsReducer'\nimport { getServiceProfiles } from '../../../redux/reducers/serviceProfilesReducer'\nimport { createApplication, getApplications } from '../../../redux/reducers/applicationsReducer'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\n\nexport type ApplicationsProps = {\n    getServiceProfiles: Function,\n    getOrganizations: Function,\n    getApplications: Function,\n    createApplication: Function,\n    applications: [] | null,\n    serviceProfiles: [] | null,\n    organizations: [] | null\n}\n\nlet Applications: React.FC<ApplicationsProps> = ({ getOrganizations, organizations,  getServiceProfiles, serviceProfiles,  getApplications, applications, createApplication, ...props}) => {\n    useEffect(() => {\n        getOrganizations()\n        getApplications()\n        getServiceProfiles()\n    },[])\n    return  <ErrorBoundary>\n                <ApplicationsComponent \n                    organizations={organizations} \n                    serviceProfiles={serviceProfiles} \n                    applications={applications}\n                    createApplication={createApplication}\n                />\n           </ErrorBoundary>\n}\n\nexport default connect(\n    (state: AppState) => ({\n        applications: fetchApplications(state),\n        serviceProfiles: fetchServiceProfiles(state),\n        organizations: fetchOrganizations(state),\n    }),\n    { \n        getOrganizations, \n        getServiceProfiles, \n        getApplications, \n        createApplication,\n    }\n    )\n(Applications)","import React, {useState, useEffect, memo} from 'react'\nimport style from './deviceProfile.module.scss'\nimport { Empty, Card, PageHeader } from 'antd'\nimport { PlusCircleTwoTone } from '@ant-design/icons'\nimport { CreateApplicationForm, CreateDeviceProfileForm } from '../../../modules'\n\ntype deviceProfilesProps = {\n    createDeviceProfile: Function\n    deviceProfiles: [] | null\n    networkServers: [] | null\n    organizations: [] | null\n}\n\nconst DeviceProfiles: React.FC<deviceProfilesProps> = ({  organizations, createDeviceProfile, networkServers, deviceProfiles,  ...props}) => {\n    const[newDeviceProfile, setNewDeviceProfile] = useState(false)\n    return (\n        <>\n            {(organizations !== null && networkServers !== null) ? <CreateDeviceProfileForm \n                                                                        createDeviceProfile={createDeviceProfile}\n                                                                        organizations={organizations} \n                                                                        visible={newDeviceProfile} \n                                                                        networkServers={networkServers}\n                                                                        setNewDeviceProfile={setNewDeviceProfile}\n                                                                    />   : React.Fragment         }\n            <div className={style.content_wrapper}>\n            <PageHeader\n              className=\"site-page-heade\"\n              title=\"Device profiles:\"\n              subTitle={<PlusCircleTwoTone onClick={() => setNewDeviceProfile(true)}\n              style={{backgroundSize: '450px'}}/>}\n            /> \n            {\n                deviceProfiles === null  \n                ? <Card \n                style={{ marginLeft: 15, marginRight: 15, width: '100%', height: '80vh' }}\n                loading={deviceProfiles === null} \n            /> \n                : <div style={{display: 'flex', flexWrap: 'wrap' }}>\n                    {\n                    deviceProfiles.length === 0\n                    ? <div style={{display: 'flex', justifyContent: 'center', flexGrow: 1}}><Empty/></div> \n                    : deviceProfiles.map((deviceProfile: any) => \n                                                             <Card\n                                                                style={{ marginLeft: 15, marginRight: 15, marginTop: 15, width: 270 }}\n                                                                title={deviceProfile.name}\n                                                             >\n                                                                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}>\n                                                                <p>id: {deviceProfile.id}</p>\n                                                                <p>organizationID: {deviceProfile.organizationID}</p>\n                                                                </div>\n                                                            </Card>\n                                                            )\n                    }\n                  </div> \n            }\n        </div>\n    </>\n        \n    )\n}\n\nexport default React.memo(DeviceProfiles)\n","import DeviceProfiles from './containers/deviceProfile'\n\nexport default DeviceProfiles","import React, { useEffect } from 'react'\nimport { AppState } from '../../../redux/store'\nimport { connect } from 'react-redux'\nimport { fetchOrganizations, fetchDeviceProfiles, fetchNetworkServers } from '../../../redux/selectors'\nimport { getOrganizations } from '../../../redux/reducers/organizationsReducer'\nimport ErrorBoundary from '../../../core/ErrorBoundary'\nimport DeviceProfilesComponent from '../components/deviceProfileComponent'\nimport { getNetworkServers } from '../../../redux/reducers/serviceProfilesReducer'\nimport { getDeviceProfiles, createDeviceProfile } from '../../../redux/reducers/deviceProfileReducer'\n\nexport type DeviceProfilesProps = {\n    getDeviceProfiles: Function\n    getOrganizations: Function\n    getNetworkServers: Function\n    createDeviceProfile: Function\n    deviceProfiles: [] | null\n    organizations: [] | null\n    networkServers: [] | null\n}\n\nlet DeviceProfiles: React.FC<DeviceProfilesProps> = ({ getOrganizations, organizations,  getDeviceProfiles, deviceProfiles, getNetworkServers, networkServers, createDeviceProfile, ...props}) => {\n    useEffect(() => {\n        getDeviceProfiles()\n        getOrganizations()\n        getNetworkServers()\n    },[])\n    return  <ErrorBoundary>\n                <DeviceProfilesComponent \n                    organizations={organizations} \n                    deviceProfiles={deviceProfiles} \n                    networkServers={networkServers}\n                    createDeviceProfile={createDeviceProfile}\n                />\n           </ErrorBoundary>\n}\n\nexport default connect(\n    (state: AppState) => ({\n        deviceProfiles: fetchDeviceProfiles(state),\n        networkServers: fetchNetworkServers(state),\n        organizations: fetchOrganizations(state),\n    }),\n    { \n        getOrganizations, \n        getDeviceProfiles, \n        getNetworkServers,\n        createDeviceProfile,\n    }\n    )\n(DeviceProfiles)","import React from 'react';\nimport logo from './logo.svg'\nimport './App.css'\nimport { Provider } from 'react-redux'\nimport { Route } from 'react-router-dom' \nimport { LoginPage, Home } from './pages/index'\nimport 'antd/dist/antd.css'\n//import './anotherCSS.less'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path={[\"/\"]} render = { () => <LoginPage/>}/>\n      <Route path=\"/home\" render = { () => <Home/>}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { devicesReducer } from './reducers/devicesReducer';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { loginReducer, organizationsReducer, serviceProfileReducer, applicationsReducer,deviceProfilesReducer } from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\n\nlet rootReducer = combineReducers({\n  loginReducer,\n  organizationsReducer,\n  devicesReducer,\n  serviceProfileReducer,\n  applicationsReducer,\n  deviceProfilesReducer,\n})\n\ntype RootReducer = typeof rootReducer\nexport type AppState = ReturnType<RootReducer>\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n  ));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n//store.dispatch(getMe())\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n       <App/>\n       </Provider>    \n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}